name: "Test and build"

on:
  pull_request:
    branches:
      - "master"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
      name: Checkout code

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip poetry
        poetry config virtualenvs.create false
        poetry install
    - name: Check codestyle
      run: |
        poetry run black --check .
        poetry run isort --check-only -rc .
    # - name: Run tests
    #   run: |
    #     coverage run --source cognite.experimental -m pytest -v tests
#        coverage xml
#    - uses: codecov/codecov-action@v1
#      with:
#        token: ${{ secrets.CODECOV_TOKEN }}
#        file: ./coverage.xml

    - name: Build package
      run: poetry build